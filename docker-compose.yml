version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  postgres:
    image: 'postgres:12'
    environment:
      - 'POSTGRES_DB=${POSTGRES_DB:-test}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-test}'
      - 'POSTGRES_USER=${POSTGRES_USER:-test}'
      - 'PGDATA=/var/lib/postgresql/data/pgdata'
    ports:
      - '${POSTGRES_PORT:-24532}:5432'
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 1G

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
#      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    networks:
      - elk
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 1G

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - server.name=kibana
      - server.host=0.0.0.0
      - elasticsearch.hosts=[http://elasticsearch:9200]
    networks:
      - elk
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 1G

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.2
    container_name: logstash
    volumes:
      - ./config/logstash/logstash.conf:/usr/share/logstash/config/logstash.conf:ro
      - ./config/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logs:/usr/share/logstash/logs
    ports:
      - "5000:5000"
    networks:
      - elk
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 1G

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch: