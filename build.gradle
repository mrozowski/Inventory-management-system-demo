import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
  id 'org.springframework.boot' version '3.2.2'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'org.jetbrains.kotlin.jvm' version '1.9.22'
  id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
  id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.22'
}

group = 'com.mrozowski'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = '17'
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
  implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
  implementation 'org.liquibase:liquibase-core'
  implementation 'org.jetbrains.kotlin:kotlin-reflect'
  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
  implementation 'org.springframework.kafka:spring-kafka'
  runtimeOnly 'org.postgresql:postgresql'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'io.projectreactor:reactor-test'
  testImplementation 'org.springframework.kafka:spring-kafka-test'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:kafka'
}

tasks.withType(KotlinCompile) {
  kotlinOptions {
    freeCompilerArgs += '-Xjsr305=strict'
    jvmTarget = '17'
  }
}

tasks.named('test') {
  useJUnitPlatform()
}
